{"version":3,"file":"464.bundle.1.0.11.js","mappings":"uKAUOA,eAAeC,IAElB,IACI,MAAMC,QAAiB,IAAAC,qBAAmB,IAAAC,WAAU,gBAEpD,IAAIF,EAASG,QAyBT,YALA,KAAQC,MAAM,CACVC,QAAS,6CAA+CL,EAASK,QACjEC,UAAW,qBACXC,MAAO,CAAC,IAvBM,EAClB,QAAuBP,EAASQ,KAAM,YACtC,MAAMC,EAAcC,SAASC,cAAc,wBAGvCF,EACAA,EAAYG,iBAAiB,UAAUd,eAAgBe,IACnD,QAAiBA,EAAO,qEACxB,QAAgBJ,EACpB,IAGA,KAAQK,QAAQ,CACZT,QAAS,iCACTC,UAAW,2BAGnB,QAAgBG,IAChB,SACJ,CASJ,CAAE,MAAOL,GACL,KAAQA,MAAM,CACVC,QAAS,6BAA+BD,EAAMC,QAC9CC,UAAW,mBACXC,MAAO,CAAC,GAEhB,CACJ,C","sources":["webpack://worldify/./src/modules/pages/app/Visa/upload_page.js"],"sourcesContent":["//import { renderDocuments, handleUploadedDocuments, handleFileInputChange, handleUpload }\nimport { getCookie, displayUser, redirectToLogin, resetPassword, emailReset, getAccountSettings, deleteCookie } from \"../../../auth.js\";\nimport { autoSaveFunction, debounce, fillFieldsFromDatabase, setupForm } from \"../../../form_handling\";\nimport { handleDocuments, handleFileInputChange, handleUpload, hideFilePreview, renderDocuments, updateDocuments } from \"../../../upload_files.js\";\nimport { logging,downloadAllFilesSubmodule, setQueryParam, getQueryParam, reloadPage } from  \"../../../utils.js\";\n\n/**\n * Renders the upload page for visa modules, including document lists and form settings.\n * Handles dynamic content based on user account settings and interaction with the page.\n */\nexport async function render() {\n\n    try {\n        const response = await getAccountSettings(getCookie('wized_token'));\n\n        if (response.success) {\n            fillFieldsFromDatabase(response.user, 'account_');\n            const formWrapper = document.querySelector('[w-el=\"formWrapper\"]');\n            \n\n            if (formWrapper) {\n                formWrapper.addEventListener('change', async function (event) {\n                    autoSaveFunction(event, `${BASE_URL}/account_settings`);\n                    updateDocuments(formWrapper);\n                });\n\n            } else {\n                logging.warning({\n                    message: 'render: Form wrapper not found',\n                    eventName: 'render_no_formWrapper',\n                });\n            }\n            updateDocuments(formWrapper);\n            handleDocuments();\n        } else {\n            logging.error({\n                message: 'render: Failed to fetch account settings: ' + response.message,\n                eventName: 'render_fetch_error',\n                extra: {}\n            });\n            return;\n        }\n\n    } catch (error) {\n        logging.error({\n            message: 'Error in render function: ' + error.message,\n            eventName: 'render_exception',\n            extra: {}\n        });\n    }\n}\n\n\n"],"names":["async","render","response","getAccountSettings","getCookie","success","error","message","eventName","extra","user","formWrapper","document","querySelector","addEventListener","event","warning"],"sourceRoot":""}