{"version":3,"file":"488.bundle.1.0.15.js","mappings":"2JAOAA,eAAeC,EAAwBC,EAAQC,GAE3C,MAAMC,GAAQ,IAAAC,WAAU,eAClBC,EAAW,IAAIC,SAErBD,EAASE,OAAO,UAAUN,GAC1BI,EAASE,OAAO,cAAcL,GAE9B,IAEI,MAAMM,QAAiBC,MAAM,wFAAqD,CAC9EC,OAAQ,OACRC,QAAS,CACL,cAAiB,UAAYR,GAEjCS,KAAMP,IAIJQ,QAAaL,EAASM,OAG5B,OAAIN,EAASO,GACFF,GAIPG,QAAQC,MAAM,uCAAwCJ,EAAKK,SAAW,iBAC/D,KAEf,CAAE,MAAOD,GAGL,OADAD,QAAQC,MAAM,yBAA0BA,IACjC,CACX,CACJ,CAEOlB,eAAeoB,IAElB,IACgCC,SAASC,cAAc,gCACzBD,SAASC,cAAc,8BAC3BD,SAASC,cAAc,gCAEvC,QAAc,gBAAgB,WAAW,CAAC,EAAErB,EA0DtD,CAAE,MAAOiB,GAET,CACJ,C","sources":["webpack://worldify/./src/modules/pages/app/Health_Insurance/health_insurance_finder.js"],"sourcesContent":["\nimport '@typeform/embed/build/css/widget.css';\nimport { attachDatePicker, get_tf_result, setupTypeform } from '../../../utils';\nimport { getAccountSettings, getCookie } from '../../../auth';\nimport { autoSaveFunction, debounce, fillFieldsFromDatabase } from '../../../form_handling';\n\n\nasync function submit_health_insurance(form_id,response_id) {\n\n    const token = getCookie('wized_token');\n    const formData = new FormData ();\n\n    formData.append('form_id',form_id);\n    formData.append('response_id',response_id);\n\n    try {\n        // Make a GET request to the authentication endpoint with the token in the headers.\n        const response = await fetch(BASE_URL + '/typeform_submissions/health-insurance', {\n            method: 'POST',\n            headers: {\n                'Authorization': 'Bearer ' + token\n            },\n            body: formData\n        });\n        \n        // Parse the response to JSON.\n        const data = await response.json();\n\n        // Check if the response status indicates success (e.g., 200 OK).\n        if (response.ok) {\n            return data;\n        } else {\n            // Log an error message if the token verification failed. \n            // Use the provided error message from the response or a default \"Unknown error\" message.\n            console.error('Retrival of Typform Response failed:', data.message || 'Unknown error');\n            return null;\n        }\n    } catch (error) {\n        // Log any errors that occurred during the token verification process.\n        console.error('Error verifying token:', error);\n        return false;\n    }\n}\n\nexport async function render () {\n\n    try {\n        const slide1_externalData = document.querySelector('[w-el=\"slide1_externalData\"]');\n        const slide2_reviewData = document.querySelector('[w-el=\"slide2_reviewData\"]');\n        const typeform_quiz = document.querySelector('[w-el=\"typeform_quiz\"]');\n\n        await setupTypeform(\"typeform_quiz\",\"pKAID3HA\",{},submit_health_insurance);\n\n\n        // document.querySelector('[w-el=\"prefill_yes\"]').addEventListener('click', async function() {\n        //     // Code to handle \"Yes\" response\n        //     slide1_externalData.classList.add('hide');\n        //     slide2_reviewData.classList.remove('hide');\n\n        //     attachDatePicker();\n        //     const response = await getAccountSettings(getCookie('wized_token'));\n\n        //     if (response.success) {\n        //         fillFieldsFromDatabase(response.user, 'account_');\n        //         const formWrapper = document.querySelector('[w-el=\"formWrapper\"]');\n\n        //         if (formWrapper) {\n        //             formWrapper.addEventListener('change', debounce((event) => autoSaveFunction(event, `${BASE_URL}/account_settings`), 500));\n        //         } else {\n        //             logging.warning({\n        //                 message: 'render: Form wrapper not found',\n        //                 eventName: 'render_no_formWrapper',\n        //             });\n        //         }\n        //     } else {\n        //         logging.error({\n        //             message: 'render: Failed to fetch account settings: ' + response.message,\n        //             eventName: 'render_fetch_error',\n        //             extra: {}\n        //         });\n        //         return;\n        //     }\n        // });\n        // document.querySelector('[w-el=\"proceedToQuiz\"]').addEventListener('click', async function() {\n        //     // Code to handle \"No\" response\n        //     const response = await getAccountSettings(getCookie('wized_token'));\n        //     slide2_reviewData.classList.add('hide');\n        //     typeform_quiz.classList.remove('hide');\n        //     const hidden_data = {\n        //         'citizenship':response.user.citizenship,\n        //         'citizenship_2':response.user.citizenship_2,\n        //         'residence_country':response.user.residence_country,\n        //         'relocation_date':response.user.relocation_date,\n        //         'birth_date':response.user.birth_date,\n        //         'birth_date_is_before_1969_01_01': response.user.birth_date ? new Date(response.user.birth_date) < new Date('1969-01-01') : null\n        //     }\n        //     await setupTypeform(\"typeform_quiz\",\"pKAID3HA\",hidden_data,submit_health_insurance);\n        // });\n\n\n        \n        // document.querySelector('[w-el=\"prefill_no\"]').addEventListener('click', async function() {\n        //     // Code to handle \"No\" response\n        //     slide1_externalData.classList.add('hide');\n        //     typeform_quiz.classList.remove('hide');\n        //     await setupTypeform(\"typeform_quiz\",\"siLiU31K\",{},submit_health_insurance);\n        // });\n\n\n    } catch (error) {\n        \n    }\n}"],"names":["async","submit_health_insurance","form_id","response_id","token","getCookie","formData","FormData","append","response","fetch","method","headers","body","data","json","ok","console","error","message","render","document","querySelector"],"sourceRoot":""}